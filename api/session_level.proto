syntax = "proto3";

import "google/protobuf/empty.proto";

package RTS;

message RequestToken {
    uint64 value = 1;
}

message SessionToken {
    uint64 value = 1;
}

enum ErrorCode {
    ERROR_CODE_UNSPECIFIED = 0;
    ERROR_CODE_NOT_IMPLEMENTED = 1;
    ERROR_CODE_MALFORMED_MESSAGE = 2;
    ERROR_CODE_MISMATCHED_SENDER = 3;
    ERROR_CODE_LOGIN_FAILED = 4;
    ERROR_CODE_MISSING_SESSION_TOKEN = 5;
    ERROR_CODE_SESSION_EXPIRED = 6;
    ERROR_CODE_ALREADY_JOINED_ROOM = 7;
    ERROR_CODE_ROOM_NOT_FOUND = 8;
    ERROR_CODE_TOO_MANY_PLAYERS_IN_ROOM = 9;
    ERROR_CODE_ALREADY_SELECTED_ROLE = 10;
}

enum Team {
    TEAM_UNSPECIFIED = 0;
    TEAM_SPECTATOR = 1;
    TEAM_RED = 2;
    TEAM_BLUE = 3;
}

enum Role {
    ROLE_UNSPECIFIED = 0;
    ROLE_SPECTATOR = 1;
    ROLE_PLAYER = 2;
}

enum UnitType {
    UNIT_TYPE_UNSPECIFIED = 0;
    UNIT_TYPE_CRUSADER = 1;
    UNIT_TYPE_SEAL = 2;
    UNIT_TYPE_GOON = 3;
    UNIT_TYPE_BEETLE = 4;
    UNIT_TYPE_CONTAMINATOR = 5;
}



message Error {
    int32 code = 1;
    bytes message = 2;
}

message RoomInfo {
    uint32 id = 1;
    bytes name = 2;
}

message AuthorizationRequest {
    RequestToken request_token = 1;
    bytes login = 2;
    bytes password = 3;
}

message AuthorizationResponse {
    oneof response {
        Error error = 1;
        SessionToken session_token = 2;
    }
}

message QueryRoomListRequest {
    SessionToken session_token = 1;
}

message StopQueryRoomListRequest {
    SessionToken session_token = 1;
}

message JoinRoomRequest {
    SessionToken session_token = 1;
    RequestToken request_token = 2;
    uint32 room_id = 3;
}

message CreateRoomRequest {
    SessionToken session_token = 1;
    RequestToken request_token = 2;
    bytes name = 3;
}

message DeleteRoomRequest {
    SessionToken session_token = 1;
    RequestToken request_token = 2;
    uint32 room_id = 3;
}

message SelectRoleRequest {
    RequestToken request_token = 1;
    SessionToken session_token = 2;
    Role role = 3;
}

message ReadyRequest {
    RequestToken request_token = 1;
    SessionToken session_token = 2;
}

message TargetUnit {
    uint32 id = 1;
}
message ActionTargetPosition {
    Vector2D position = 1;
}

message AttackAction {
    oneof target {
        ActionTargetPosition position = 1;
        TargetUnit unit = 2;
    }
}

message MoveAction {
    oneof target {
        ActionTargetPosition position = 1;
        TargetUnit unit = 2;
    }
}

enum CastType {
    UNKNOWN = 0;
    PESTILENCE = 1;
    SPAWN_BEETLE = 2;
}

message CastAction {
    ActionTargetPosition position = 1;
    CastType type = 2;
}

message StopAction {
    TargetUnit target = 1;
}

message UnitAction {
    oneof action{
        AttackAction attack = 1;
        MoveAction move = 2;
        CastAction cast = 3;
        StopAction stop = 4;
    }
}

message ClientId {
    fixed32 id = 1; // Задаётся клиентом (Старший бит == 1)
}

message UnitCreateRequest {
    SessionToken session_token = 1;
    RequestToken request_token = 2;
    uint32 id = 3;
    Vector2D position = 4;
    UnitType unit_type = 6;
}

message UnitActionRequest {
    SessionToken session_token = 1;
    RequestToken request_token = 2;
    uint32 unit_id = 3;
    UnitAction action = 4;
}

message RoomListResponse {
    SessionToken session_token = 1;
    repeated RoomInfo room_info_list = 2;
}

message JoinRoomResponse {
    RequestToken request_token = 1;
    oneof response {
        Error error = 2;
        google.protobuf.Empty success = 3;
    }
}

message ErrorResponse {
    SessionToken session_token = 1;
    RequestToken request_token = 2;
    Error error = 3;
}

message SessionClosedResponse {
    SessionToken session_token = 1;
    Error error = 2;
}

message CreateRoomResponse {
    RequestToken request_token = 1;
    oneof status {
        uint32 room_id = 2;
        Error error = 3;
    }
}

message DeleteRoomResponse {
    RequestToken request_token = 1;
    oneof status {
        google.protobuf.Empty success = 2;
        Error error = 3;
    }
}

message SelectRoleResponse {
    RequestToken request_token = 1;
    oneof status {
        google.protobuf.Empty success = 2;
        Error error = 3;
    }
}

message MatchPreparedResponse {
    Team team = 1;
}

message MatchStartResponse {
}

message ReadyResponse {
    RequestToken request_token = 1;
    oneof status {
        google.protobuf.Empty success = 2;
        Error error = 3;
    }
}

message UnitCreateResponse {
    ClientId client_id = 1;
    RequestToken request_token = 2;
    uint32 unit_id = 3;
    Vector2D position = 4;
    UnitType unit_type = 5;
}

message Vector2D {
    double x = 1;
    double y = 2;
}

message Unit {
    ClientId client_id = 1;
    uint32 id = 2;
    UnitType type = 3;
    Team team = 4;
    Vector2D position = 5;
    double orientation = 6;
    uint32 health = 7;
    UnitAction current_action = 8;
    uint32 attack_remaining_ticks = 9;
    uint32 cooldown = 10;
}

enum MissileType {
    MISSILE_ROCKET = 0;
    MISSILE_PESTILENCE = 1;
}

message Missile {
    uint32 id = 2;
    MissileType type = 3;
    Team team = 4;
    Vector2D position = 5;
    Vector2D target_position = 6;
    TargetUnit target_unit = 7;
}

message Explosion {

}

message MatchStateFragmentResponse {
    uint32 tick = 1;
    uint32 fragment_count = 2;
    uint32 fragment_no = 3;
    repeated Unit units = 4;
    repeated Missile missiles = 5;
}

message Request {
    oneof message {
        AuthorizationRequest authorization = 2;
        QueryRoomListRequest query_room_list = 4;
        StopQueryRoomListRequest stop_query_room_list = 5;
        JoinRoomRequest join_room = 7;
        CreateRoomRequest create_room = 8;
        DeleteRoomRequest delete_room = 9;
        SelectRoleRequest select_role = 10;
        ReadyRequest ready = 11;
        UnitCreateRequest unit_create = 12;
        UnitActionRequest unit_action = 13;
    }
}

message Response {
    oneof message {
        ErrorResponse error = 1;
        AuthorizationResponse authorization = 2;
        SessionClosedResponse session_closed = 3;
        RoomListResponse room_list = 6;
        JoinRoomResponse join_room = 7;
        CreateRoomResponse create_room = 8;
        DeleteRoomResponse delete_room = 9;
        SelectRoleResponse select_role = 10;
        ReadyResponse ready = 11;
        MatchPreparedResponse match_prepared = 12;
        MatchStartResponse match_start = 13;
        MatchStateFragmentResponse match_state_fragment = 14;
    }
}
